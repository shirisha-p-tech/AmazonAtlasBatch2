public class HashTable<Key, Value> {
private class HashTableNode {
private Key key;
private Value value;
private boolean active;
private boolean tombstoned; // Allow reuse of removed slots
public HashTableNode() { 
// All nodes in array will begin initialized this way
key = null;
value = null;
active = false;
tombstoned = false;
}
public HashTableNode(Key initKey, Value initData) {
key = initKey;
value = initData;
active = true;
tombstoned = false;
}
}

private final static int TABLE_SIZE = 9;
private Object[] table;
public HashTable() {
// Since HashNodeTable has generics, we can not have 
// a new HashNodeTable[], so use Object[]
table = new Object[TABLE_SIZE];
for (int j = 0; j < TABLE_SIZE; j++)
table[j] = new HashTableNode();
}
